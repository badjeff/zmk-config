/*
 * Copyright (c) 2020 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix-transform = &default_transform;
 		// zephyr,display = &oled;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <10>;
		rows = <8>;
		map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)  RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)  RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)  RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
                RC(3,2) RC(3,3) RC(3,4)  RC(3,5) RC(3,6) RC(3,7)
RC(4,0) RC(4,1) RC(4,2)
// D0 P0.2   D1 P0.3   D2 P0.28
	 RC(5,0)   RC(5,1)   RC(5,2)  // D3 P0.29
   RC(6,0)   RC(6,1)   RC(6,2)  // D4 P0.4
   RC(7,0)   RC(7,1)   RC(7,2)  // D5 P0.5
		>;
		row-offset = <5>;
		col-offset = <0>;
	};

	kscan0: kscan {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN";
		diode-direction = "col2row";
		wakeup-source;
		row-gpios
			= <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;
		col-gpios
			= <&gpio0 2 GPIO_ACTIVE_HIGH>
			, <&gpio0 3 GPIO_ACTIVE_HIGH>
		  , <&gpio0 28 GPIO_ACTIVE_HIGH>
			;
	};
};

#include "donki36__esb_addr.dtsi"

#include <input/processors/report_rate_limit.dtsi>
#include <input/processors/xyz.dtsi>

#include "donki36_mou1_paw3395.dtsi"
#include "donki36_zplit.dtsi"

&tball0_split { status = "disabled"; };
&tball1_split { status = "disabled"; };
&tball2_split { status = "disabled"; };
&tpoint0_split { status = "disabled"; };
&tpad0_split { status = "disabled"; };
&mou0_split { status = "disabled"; };
&mou1_split { device = <&mou1>; input-processors = <&zip_xyz>; };
&mou2_split { status = "disabled"; };
&mou2_split_alt { status = "disabled"; };

/{
	s_encoder: s_encoder {
		compatible = "alps,ec11";
    status = "okay";
		// NFC pins in nRF52 series: P0.09 and P0.10
		a-gpios = <&gpio0 9  (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		steps = <36>; // <36>; for 23mm wheel, <48>; for 19mm wheel
	};
	sensors: sensors {
		compatible = "zmk,keymap-sensors";
		status = "okay";
		sensors = <&s_encoder>;
		triggers-per-rotation = <12>; // EC05 encoder
	};
};
