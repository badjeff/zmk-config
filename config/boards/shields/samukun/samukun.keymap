/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <zephyr/dt-bindings/input/input-event-codes.h>

#include <behaviors.dtsi>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors/mouse_key_press.dtsi>
#include <behaviors/mouse_move.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>

#define DEF 0

/ {
        // tpoint0_mmv_ibl {
        //         compatible = "zmk,input-behavior-listener";
        //         device = <&tpoint0>;
        //         layers = <DEF>;
	//         evt-type = <INPUT_EV_REL>;
	//         x-input-code = <INPUT_REL_X>;
	//         y-input-code = <INPUT_REL_Y>;
        //         xy-swap; x-invert;
        //         y-invert;
        //         // bindings = <&ib_tog_layer MSK>;
        // };

        // tpoint1_mmv_ibl {
        //         compatible = "zmk,input-behavior-listener";
        //         device = <&tpoint1>;
        //         layers = <DEF>;
	//         evt-type = <INPUT_EV_REL>;
	//         x-input-code = <INPUT_REL_X>;
	//         y-input-code = <INPUT_REL_Y>;
        //         xy-swap; x-invert;
        //         y-invert;
        //         // bindings = <&ib_tog_layer MSK>;
        // };

        // ib_fwd_to_hid_io: ib_forward_fwd_to_hid_io {
        //         compatible = "zmk,input-behavior-fwd-to-hid-io";
        //         #binding-cells = <0>;
        // };

        // behaviors {
        //         ec_s: mouse_scroll {
        //                 compatible = "zmk,behavior-input-two-axis";
        //                 #binding-cells = <1>;
        //                 trigger-period-ms = <12>; // slow down for OTA, default is 3ms
        //                 x-input-code = <INPUT_REL_HWHEEL>;
        //                 y-input-code = <INPUT_REL_WHEEL>;
        //                 time-to-max-speed-ms = <177>;
        //                 acceleration-exponent = <0>;
        //         };
        //         rot_enc: sensor_rotate {
        //                 compatible = "zmk,behavior-sensor-rotate";
        //                 #sensor-binding-cells = <0>;
        //                 bindings = <&ec_s MOVE_Y(-37)>, <&ec_s MOVE_Y(37)>;
        //                 tap-ms = <65>;
        //         };
        // };

        keymap {
                compatible = "zmk,keymap";
                DEF_layer {
                        bindings = <

&kp LSHFT  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8
&kp A  &kp B  &kp C  &kp D  &kp E  &kp F  &kp G  &kp H
&kp LS(A)  &kp LS(B)  &kp LS(C)  &kp LS(D)  &kp LS(E)  &kp LS(F)  &kp LS(G)  &kp LS(H)

&kp N1   &kp N2   &kp N3   &kp N4
&kp N5   &kp N6   &kp N7   &kp N8
&kp N9   &kp N0   &kp A    &kp B
&kp C    &kp D    &kp E    &kp F

                        >;
                        // sensor-bindings = < &rot_enc >;
                };
       };
};
