/*
 * Copyright (c) 2020 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix-transform = &default_transform;
	};

	// kscan0: kscan {
	// 	compatible = "zmk,kscan-blackout";
	// 	label = "KSCAN";
	// };

	kscan_sr0: kscan_sr0 {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN_0";
		wakeup-source;
		diode-direction = "col2row";
		col-gpios
			= 
				//<&pro_micro 19 GPIO_ACTIVE_HIGH>

				<&sr0 0 GPIO_ACTIVE_HIGH>
			, <&sr0 1 GPIO_ACTIVE_HIGH>
			, <&sr0 2 GPIO_ACTIVE_HIGH>
			, <&sr0 3 GPIO_ACTIVE_HIGH>
			, <&sr0 4 GPIO_ACTIVE_HIGH>
			, <&sr0 5 GPIO_ACTIVE_HIGH>
			, <&sr0 6 GPIO_ACTIVE_HIGH>
			, <&sr0 7 GPIO_ACTIVE_HIGH>

			,	<&sr0 8 GPIO_ACTIVE_HIGH>
			, <&sr0 9 GPIO_ACTIVE_HIGH>
			, <&sr0 10 GPIO_ACTIVE_HIGH>
			, <&sr0 11 GPIO_ACTIVE_HIGH>
			, <&sr0 12 GPIO_ACTIVE_HIGH>
			, <&sr0 13 GPIO_ACTIVE_HIGH>
			, <&sr0 14 GPIO_ACTIVE_HIGH>
			, <&sr0 15 GPIO_ACTIVE_HIGH>

			,	<&sr0 16 GPIO_ACTIVE_HIGH>
			, <&sr0 17 GPIO_ACTIVE_HIGH>
			, <&sr0 18 GPIO_ACTIVE_HIGH>
			, <&sr0 19 GPIO_ACTIVE_HIGH>
			, <&sr0 20 GPIO_ACTIVE_HIGH>
			, <&sr0 21 GPIO_ACTIVE_HIGH>
			, <&sr0 22 GPIO_ACTIVE_HIGH>
			, <&sr0 23 GPIO_ACTIVE_HIGH>
			;
		row-gpios
			= <&pro_micro 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;
    wakeup-source;
	};

  kscan_expander0: kscan_expander0 {
    compatible = "zmk,kscan-gpio-matrix";
    label = "KSCAN_1";
    diode-direction = "col2row";
    col-gpios
      = <&expander 0 (GPIO_ACTIVE_LOW)>
      , <&expander 1 (GPIO_ACTIVE_LOW)>
      , <&expander 2 (GPIO_ACTIVE_LOW)>
      , <&expander 3 (GPIO_ACTIVE_LOW)>
      ;
    row-gpios
			= <&expander 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
			, <&expander 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
			, <&expander 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
			, <&expander 11 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
			;
    wakeup-source;
  };

  kscan0: kscan_composite {
    compatible = "zmk,kscan-composite";
    label = "KSCAN_COMPOSITE";

    columns = <24>;
    rows = <5>;
		
		// 595: 24c x 1r
    kscan_sr {
      kscan = <&kscan_sr0>;
    };

		// mcp23s17: 4c x 4r
    kscan_expander {
      kscan = <&kscan_expander0>;
      row-offset = <1>;
    };
  };

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <8>;
		rows = <1>;
		map = <
			RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7)
			RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(0,14) RC(0,15)
			RC(0,16) RC(0,17) RC(0,18) RC(0,19) RC(0,20) RC(0,21) RC(0,22) RC(0,23)
			RC(1,0) RC(1,1) RC(1,2) RC(1,3)
			RC(2,0) RC(2,1) RC(2,2) RC(2,3)
			RC(3,0) RC(3,1) RC(3,2) RC(3,3)
			RC(4,0) RC(4,1) RC(4,2) RC(4,3)
		>;
	};

};

// &adc {
// 	status = "okay";
// };

// / {
//     scroll_wheel: scroll_wheel {
//         compatible = "ploopy,optical-encoder";
//         status = "okay";
//         poll-period = <10>;
//         event-startup-delay = <1000>;
//         steps = <28>;
//         io-channels = <&adc 5>, <&adc 7>;
//     };

//     sensors: sensors {
//         compatible = "zmk,keymap-sensors";
//         sensors = <&scroll_wheel>;
//         triggers-per-rotation = <14>;
//     };
// };
